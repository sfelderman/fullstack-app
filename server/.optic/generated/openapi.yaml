openapi: 3.0.1
info:
  title: Fullstack API
  version: '278'
paths:
  /users:
    delete:
      operationId: request_6uwuuJ1R30
      summary: Delete a user
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - user
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    required:
                      - __v
                      - _id
                      - date
                      - email
                      - password
                      - username
                    properties:
                      email:
                        type: string
                      username:
                        type: string
                      _id:
                        type: string
                      date:
                        type: string
                      __v:
                        type: number
                      password:
                        type: string
          description: ''
    parameters: []
  /users/register:
    post:
      operationId: request_9kWhUGWMpz
      summary: Registers a new user
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - email
                - password
                - username
              properties:
                email:
                  type: string
                password:
                  type: string
                username:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                  - __v
                  - _id
                  - date
                  - email
                  - password
                  - username
                properties:
                  email:
                    type: string
                  username:
                    type: string
                  _id:
                    type: string
                  date:
                    type: string
                  __v:
                    type: number
                  password:
                    type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                required:
                  - email
                properties:
                  email:
                    type: string
          description: ''
    parameters: []
  '/todos/{todoId}':
    delete:
      operationId: request_SebM563X9a
      summary: Delete a Todo
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - todo
                properties:
                  message:
                    type: string
                  todo:
                    type: object
                    required:
                      - __v
                      - _id
                      - completed
                      - text
                      - userId
                    properties:
                      _id:
                        type: string
                      text:
                        type: string
                      completed:
                        type: boolean
                      __v:
                        type: number
                      userId:
                        type: string
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
          description: ''
    get:
      operationId: request_DTlLzjgpkU
      summary: Fetches Single Todo
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                  - __v
                  - _id
                  - completed
                  - text
                  - userId
                properties:
                  _id:
                    type: string
                  text:
                    type: string
                  completed:
                    type: boolean
                  __v:
                    type: number
                  userId:
                    type: string
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
          description: ''
    parameters:
      - in: path
        name: todoId
        required: true
        schema:
          type: string
  /todos:
    get:
      operationId: request_JxEIY405Mr
      summary: Gets all Todos
      description: Returns a list of all todos available to the user
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - __v
                    - _id
                    - completed
                    - text
                    - userId
                  properties:
                    _id:
                      type: string
                    text:
                      type: string
                    completed:
                      type: boolean
                    __v:
                      type: number
                    userId:
                      type: string
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
          description: ''
    post:
      description: Create a new Todo
      operationId: request_uMJU4a7o8r
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - completed
                - text
              properties:
                completed:
                  type: boolean
                text:
                  type: string
      summary: Creates a Todo
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                required:
                  - __v
                  - _id
                  - completed
                  - text
                  - userId
                properties:
                  _id:
                    type: string
                  text:
                    type: string
                  completed:
                    type: boolean
                  __v:
                    type: number
                  userId:
                    type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: object
                    properties:
                      body:
                        type: string
                      completed:
                        type: string
                      isCompleted:
                        type: string
                      text:
                        type: string
          description: ''
    parameters: []
  /users/login:
    post:
      operationId: request_LprGON0NeL
      summary: Login Endpoint
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - token
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: object
                    required:
                      - email
                    properties:
                      email:
                        type: string
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
          description: ''
    parameters: []
components:
  schemas: {}
